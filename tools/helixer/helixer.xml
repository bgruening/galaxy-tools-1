<?xml version="1.0"?>
<tool id="helixer" name="Helixer" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>gene calling</description>
    <macros>
        <import>macros.xml</import>
    </macros>

    <requirements>
        <expand macro="requirements"/>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[

        Helixer.py
        --fasta-path '$input'
        --species '$species'
        --lineage $lineages
        --gff-output-path '$output'

        --temporary-dir ./

        #set default_subsequence_length = {"fungi": 21384, "land_plant": 106920, "invertebrate": 213840, "vertebrate": 213840}
        #set default_overlap_offset = {"fungi": 10692, "land_plant": 53460, "invertebrate": 106920, "vertebrate": 106920}
        #set default_overlap_core_length = {"fungi": 16038, "land_plant": 80190, "invertebrate": 160380, "vertebrate": 160380}

        #if str($custom_opt.custom) == "default":
            --subsequence-length $default_subsequence_length
            #if ($custom_opt.use_overlap) == "true":
                --overlap-offset $default_overlap_offset
                --overlap-core-length $default_overlap_core_length
            #end if
        #elif str($custom_opt.custom) == "new_value":
            --subsequence-length '$custom_opt.subsequence_length'
            #if str( $custom_opt.option_overlap.use_overlap ) == "true":
                --overlap-offset '$custom_opt.option_overlap.overlap_offset'
                --overlap-core-length '$custom_opt.option_overlap.overlap_core_length'
            #end if
        #end if

        --batch-size $size
        --window-size $post_processing.window_size
        --min-coding-length $post_processing.min_coding_length
        --edge-threshold $post_processing.edge_threshold
        --peak-threshold $post_processing.peak_threshold

    ]]></command>

    <inputs>
        <param argument="--fasta-path" name="input" type="data" format="fasta,fasta.gz" label="Genomic sequence"></param>
        
        <param argument="--lineage" name="lineages" type="select" label="Available lineages" help="Choose the model to use for the annotation">
            <option value="land_plant">land plant</option>
            <option value="vertebrate">vertebrate</option>
            <option value="invertebrate">invertebrate</option>
            <option value="fungi">fungi</option>
        </param>

        <param argument="--species" type="text" optional="true" label="Species name">
            <sanitizer invalid_char="">
                <valid initial="string.letters,string.digits">
                    <add value="_" />
                </valid>
            </sanitizer>
            <validator type="regex">[0-9a-zA-Z_]+</validator>
        </param>
        <param name="size" argument="--batch-size" type="integer" value="8" label="Batch size" help="It may be necessary to reduce it if the GPU runs out of memory" />
        <section name="post_processing" title="Post-processing">
            <param argument="--window-size" type="integer" min="0" value="100" label="Window size" help="This determines the number of bases averaged during the sliding window approach"/>
            <param argument="--edge-threshold" type="float" min="0" max="1" value="0.1" label="Edge threshold" help="This threshold specifies the genic score which defines the start / end boundaries of each candidate region"/>
            <param argument="--peak-threshold" type="float" min="0" max="1" value="0.8" label="Peak threshold" help="This threshold specifies the minimum peak genic score required to accept the candidate region"/>
            <param argument="--min-coding-length" type="integer"  min="0" value="100" label="Minimum coding length"/>
        </section>

        <conditional name="custom_opt">
            <param name="custom" type="select" label="Do you want to keep the default values or change them?" help="">
                <option value="default" selected="true">Default value</option>
                <option value="new_value">Modify value</option>
            </param>
            <when value="default">
                <param name="use_overlap" type="select" label="Enable overlapping step after predictions" help="This step combines predictions made on each subsequences, to improve quality near start and end of subsequences">
                    <option value="true" selected="true">Yes</option>
                    <option value="false">No</option>
                </param>
            </when>
            <when value="new_value">
                <param name="subsequence_length" type="text"  label="Subsequence length: how much of the genome the Neural Network can see at once" help="Default values are 21384 for fungi, 106920 for land plant, and 213840 for vertebrates and invertebrates"/>
                <conditional name="option_overlap">
                    <param name="use_overlap" type="select" label="Enable overlapping step after predictions" help="This step combines predictions made on each subsequences, to improve quality near start and end of subsequences.">
                        <option value="true" selected="true">Yes</option>
                        <option value="false">No</option>
                    </param>
                    <when value="true">
                        <param name="overlap_offset" type="text"  label="Overlap offset" help="Default values are 10692 for fungi, 53460 for land plant, and 106920 for vertebrates and invertebrates."/>
                        <param name="overlap_core_length" type="text" label="Overlap core length" help="Default values are 16038 for fungi, 80190 for land plant, and 160380 for vertebrates and invertebrates."/>
                    </when>
                    <when value="false"/>
                </conditional>
            </when>
        </conditional>
    </inputs>

    <outputs>
        <data name="output" format="gff3">
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <!-- Test for species and land_plant-->        
            <param name="input" value="sequence.fasta"/>
            <param name="lineages" value="land_plant"/>
            <param name="species" value="Arabidopsis"/>
            <param name="size" value="8"/>
            <section name="post_processing">
                <param name="window_size" value="100"/>
                <param name="edge_threshold" value="0.1"/>
                <param name="peak_threshold" value="0.8"/>
                <param name="min_coding_length" value="100"/>
            </section>
            <conditional name="custom_opt">
                <param name="custom" value="default"/>
                <param name="use_overlap" value="true"/>
            </conditional>
            <output name="output" value="ouput_species.gff3" ftype="gff3" compare="sim_size" delta="100"/>
        </test>
        
        <test expect_num_outputs="1">
            <!-- Test for vertebrates-->
            <param name="input" value="sequence.fasta"/>
            <param name="lineages" value="vertebrate"/>
            <param name="size" value="8"/>
            <section name="post_processing">
                <param name="window_size" value="100"/>
                <param name="edge_threshold" value="0.1"/>
                <param name="peak_threshold" value="0.8"/>
                <param name="min_coding_length" value="100"/>
            </section>
            <conditional name="custom_opt">
                <param name="custom" value="default"/>
                <param name="use_overlap" value="true"/>
            </conditional>
            <output name="output" value="vertebrate.gff3" ftype="gff3" lines_diff="2"/>
        </test>
        
    </tests>

    <help><![CDATA[
        Helixer_: Gene calling with Deep Neural Networks.

        .. _Helixer: https://github.com/weberlab-hhu/Helixer
    ]]></help>
    <expand macro="citation"></expand>
</tool>
